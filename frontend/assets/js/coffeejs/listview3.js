// Generated by CoffeeScript 1.3.1
(function() {
  var Item3, ItemView3, List3, ListView3,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  jQuery(function() {});

  Item3 = (function(_super) {

    __extends(Item3, _super);

    Item3.name = 'Item3';

    function Item3() {
      return Item3.__super__.constructor.apply(this, arguments);
    }

    Item3.prototype.defaults = {
      part1: 'Hello',
      part2: 'Backbone'
    };

    return Item3;

  })(Backbone.Model);

  List3 = (function(_super) {

    __extends(List3, _super);

    List3.name = 'List3';

    function List3() {
      return List3.__super__.constructor.apply(this, arguments);
    }

    List3.prototype.model = Item3;

    return List3;

  })(Backbone.Collection);

  ItemView3 = (function(_super) {

    __extends(ItemView3, _super);

    ItemView3.name = 'ItemView3';

    function ItemView3() {
      return ItemView3.__super__.constructor.apply(this, arguments);
    }

    ItemView3.prototype.tagName = 'li';

    ItemView3.prototype.initialize = function() {
      return _.bindAll(this);
    };

    ItemView3.prototype.render = function() {
      $(this.el).html("<span>" + (this.model.get('part1')) + " " + (this.model.get('part2')) + "!</span>");
      return this;
    };

    return ItemView3;

  })(Backbone.View);

  ListView3 = (function(_super) {

    __extends(ListView3, _super);

    ListView3.name = 'ListView3';

    function ListView3() {
      return ListView3.__super__.constructor.apply(this, arguments);
    }

    ListView3.prototype.el = $('body');

    ListView3.prototype.initialize = function() {
      _.bindAll(this);
      this.collection = new List3;
      this.collection.bind('add', this.appendItem);
      this.counter = 0;
      return this.render();
    };

    ListView3.prototype.render = function() {
      $(this.el).append('<button>Add List Item</button>');
      return $(this.el).append('<ul></ul>');
    };

    ListView3.prototype.addItem = function() {
      var item;
      this.counter++;
      item = new Item3;
      item.set({
        part2: "" + (item.get('part2')) + " " + this.counter
      });
      return this.collection.add(item);
    };

    ListView3.prototype.appendItem = function(item) {
      var itemview;
      itemview = new ItemView3({
        model: item
      });
      return $('ul').append(itemview.render().el);
    };

    ListView3.prototype.events = {
      'click button': 'addItem'
    };

    return ListView3;

  })(Backbone.View);

}).call(this);
